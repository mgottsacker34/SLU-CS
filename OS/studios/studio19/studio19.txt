1) Matt Gannon & Matt Gottsacker

2) The owner of this file can read and write, and both the group and other can only read.

3) Using 'ls -l -k', test.txt is reported as 0 bytes.

4) Output:
00000000: 6865 6c6c 6f20 7468 6973 2069 7320 6120  hello this is a 
00000010: 7465 7374 2066 696c 6520 4920 616d 2068  test file I am h
00000020: 6f70 696e 6720 7468 6973 2069 7320 7265  oping this is re
00000030: 6c61 7469 7665 6c79 2063 6c6f 7365 2074  latively close t
00000040: 6f20 6669 6674 7920 6368 6172 6163 7465  o fifty characte
00000050: 7273 2e0a                                rs..

5) The bytes in the file are represented in valid ASCII hex values, whereas the representation of executable files is mostly 0's.

6) One character not printed to the screen (represented as a . ) is the newline character (hex 0a).

7) cffa edfe are the first four bytes of executable files.

8) Output:
00000f00: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000f10: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000f20: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000f30: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000f40: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000f50: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000f60: 5548 89e5 4883 ec10 488d 3d37 0000 00b0  UH..H...H.=7....
00000f70: 00e8 0e00 0000 31c9 8945 fc89 c848 83c4  ......1..E...H..
00000f80: 105d c390 ff25 8600 0000 0000 4c8d 1d75  .]...%......L..u
00000f90: 0000 0041 53ff 2565 0000 0090 6800 0000  ...AS.%e....h...
00000fa0: 00e9 e6ff ffff 4865 6c6c 6f2c 2077 6f72  ......Hello, wor
00000fb0: 6c64 210a 0000 0000 0100 0000 1c00 0000  ld!.............
00000fc0: 0000 0000 1c00 0000 0000 0000 1c00 0000  ................
00000fd0: 0200 0000 600f 0000 3400 0000 3400 0000  ....`...4...4...
00000fe0: 840f 0000 0000 0000 3400 0000 0300 0000  ........4.......
00000ff0: 0c00 0100 1000 0100 0000 0000 0000 0001  ................
00001000: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00001010: 9c0f 0000 0100 0000 0000 0000 0000 0000  ................

I speculate that this is the string stored to be printed from the printf command.

9) 
Entry point address:               0x400440
 - We think this line indicates the memory address of the program pointer.

Machine:                           Advanced Micro Devices X86-64
 - We think this line describes the underlying architecture on which the program will be run.

10) The offset of the .text segment of my program starts at 00000440.
[14] .text             PROGBITS         0000000000400440  00000440


11) The main function starts at byte 000000000040052d

Output:
60: 000000000040052d    16 FUNC    GLOBAL DEFAULT   13 main






